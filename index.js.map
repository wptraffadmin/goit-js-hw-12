{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n// Константи для роботи з API\nconst API_KEY = '48154537-527b84123da1832c7b7680c8e';\nconst BASE_URL = 'https://pixabay.com/api/';\n// Функція для отримання зображень з API\nexport async function fetchImages(query, page) {\n    const searchParams = new URLSearchParams({\n        key: API_KEY,\n        q: query,\n        page: page,\n        per_page: 15,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true\n    });\n    const url = `${BASE_URL}?${searchParams}`;\n    try {\n        const response = await axios.get(url);\n        if (response.status !== 200) {\n            throw new Error('Failed to fetch images');\n        }\n        return {\n            images: response.data.hits,\n            totalHits: response.data.totalHits\n        };\n    } catch (error) {\n        throw new Error('Failed to fetch images');\n    }\n}\n","import iziToast from 'izitoast';\n\n// Функція для рендерингу зображень\nexport function renderImages(images, totalHits) {\n    const gallery = document.querySelector('.gallery');\n    \n    if (!gallery) {\n        console.error('Gallery element not found');\n        return;\n    }\n\n    if (images.length === 0) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n        });\n        return;\n    }\n\n    const imageMarkup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <a href=\"${largeImageURL}\" class=\"gallery-item\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" />\n            <div class=\"info\">\n                <p><strong>Likes:</strong> <br> ${likes}</p>\n                <p><strong>Views:</strong> <br> ${views}</p>\n                <p><strong>Comments:</strong> <br> ${comments}</p>\n                <p><strong>Downloads:</strong> <br> ${downloads}</p>\n            </div>\n        </a>\n    `).join('');\n\n    gallery.insertAdjacentHTML('beforeend', imageMarkup);\n}\n\n// Функція для прокрутки сторінки\nexport function scrollPageSmoothly() {\n    const galleryItems = document.querySelectorAll('.gallery-item');\n    \n    if (galleryItems.length > 0) {\n        const lastItem = galleryItems[galleryItems.length - 1];\n        const itemHeight = lastItem.getBoundingClientRect().height;\n        \n        window.scrollBy({\n            top: itemHeight * 2,\n            behavior: 'smooth'\n        });\n    }\n}\n\n// Функція для відображення індикатора завантаження\nexport function showLoadingIndicator() {\n    // Знаходимо кнопку \"Load More\"\n    const loadMoreBtn = document.querySelector('.load-more-btn');\n    // Якщо кнопка відсутня, виходимо з функції\n    if (!loadMoreBtn) return;\n\n    // Знаходимо або створюємо індикатор завантаження\n    const loader = document.querySelector('.loader') || createLoader();\n    // Ховаємо кнопку \"Load More\"\n    loadMoreBtn.style.display = 'none';\n    // Робимо індикатор завантаження видимим\n    loader.classList.add('visible');\n}\n\n// Функція для приховування індикатора завантаження\nexport function hideLoadingIndicator() {\n    // Знаходимо індикатор завантаження\n    const loader = document.querySelector('.loader');\n    // Знаходимо кнопку \"Load More\"\n    const loadMoreBtn = document.querySelector('.load-more-btn');\n    \n    // Якщо індикатор завантаження існує, приховуємо його\n    if (loader) {\n        loader.classList.remove('visible');\n    }\n    \n    // Якщо кнопка \"Load More\" існує, робимо її видимою\n    if (loadMoreBtn) {\n        loadMoreBtn.style.display = 'block';\n    }\n}\n\n// Функція для створення індикатора завантаження\nfunction createLoader() {\n    // Створюємо новий div для індикатора\n    const loader = document.createElement('div');\n    // Додаємо клас 'loader' для стилізації\n    loader.className = 'loader';\n    // Вставляємо індикатор після галереї\n    document.querySelector('.gallery').insertAdjacentElement('afterend', loader);\n    // Повертаємо створений індикатор\n    return loader;\n}\n\n// Функція для рендерингу кнопки \"Load More\"\nexport function renderLoadMoreButton(gallery, totalHits) {\n    // Знаходимо існуючу кнопку \"Load More\"\n    const existingButton = document.querySelector('.load-more-btn');\n    // Знаходимо існуюче повідомлення про кінець результатів\n    const existingMessage = document.querySelector('.end-message');\n    // Знаходимо індикатор завантаження\n    const loader = document.querySelector('.loader');\n    \n    // Якщо існує кнопка \"Load More\", видаляємо її\n    if (existingButton) {\n        existingButton.remove();\n    }\n    // Якщо існує повідомлення про кінець результатів, видаляємо його\n    if (existingMessage) {\n        existingMessage.remove();\n    }\n    // Якщо індикатор завантаження існує, приховуємо його\n    if (loader) {\n        loader.classList.remove('visible');\n    }\n\n    // Розраховуємо поточну сторінку на основі кількості елементів у галереї\n    const currentPage = Math.ceil(document.querySelectorAll('.gallery-item').length / 15);\n    \n    // Якщо результат пошуку 0 завершуємо функцію\n    if (totalHits === 0) {\n    return;\n    }\n\n    // Якщо поточна сторінка охоплює всі результати пошуку\n    if (currentPage * 15 >= totalHits) {\n        // Створюємо повідомлення про кінець результатів\n        const endMessage = `\n            <p class=\"end-message\">We're sorry, but you've reached the end of search results.</p>\n        `;\n        // Вставляємо повідомлення після галереї\n        gallery.insertAdjacentHTML('afterend', endMessage);\n        return; // Завершуємо виконання функції\n    }\n\n    // Створюємо розмітку для кнопки \"Load More\"\n    const buttonMarkup = `\n        <button type=\"button\" class=\"load-more-btn\">Load More</button>\n    `;\n    \n    // Додаємо кнопку після галереї\n    gallery.insertAdjacentHTML('afterend', buttonMarkup);\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { fetchImages } from './js/pixabay-api.js';\nimport { \n    renderImages, \n    showLoadingIndicator, \n    hideLoadingIndicator, \n    renderLoadMoreButton,\n    scrollPageSmoothly \n} from './js/render-functions.js';\n\n// Головний клас для керування галереєю зображень\nclass ImageGalleryController {\n    // Конструктор класу ініціалізує початкові значення\n    constructor() {\n        this.currentPage = 1;        // Поточна сторінка пагінації\n        this.currentQuery = '';      // Поточний пошуковий запит\n        this.lightbox = null;        // Екземпляр лайтбоксу для перегляду зображень\n        this.init();                 // Запуск ініціалізації\n    }\n\n    // Метод ініціалізації компонентів галереї\n    init() {\n        this.initializeElements();    // Ініціалізація DOM-елементів\n        this.initializeLightbox();    // Ініціалізація лайтбоксу\n        this.addEventListeners();     // Додавання обробників подій\n    }\n\n    // Ініціалізація необхідних DOM-елементів\n    initializeElements() {\n        this.searchButton = document.querySelector('#search-button');  // Кнопка пошуку\n        this.searchInput = document.querySelector('#search-input');    // Поле введення\n        this.gallery = document.querySelector('.gallery');            // Контейнер галереї\n        \n        // Перевірка наявності всіх необхідних елементів\n        if (!this.searchButton || !this.searchInput || !this.gallery) {\n            throw new Error('Required elements not found');\n        }\n    }\n\n    // Ініціалізація лайтбоксу для перегляду зображень\n    initializeLightbox() {\n        this.lightbox = new SimpleLightbox('.gallery a');\n    }\n\n    // Додавання обробників подій\n    addEventListeners() {\n        // Обробник кліку по кнопці пошуку\n        this.searchButton.addEventListener('click', () => this.handleSearch());\n        \n        // Обробник натискання Enter в полі пошуку\n        this.searchInput.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter') {\n                e.preventDefault();\n                this.handleSearch();\n            }\n        });\n        \n        // Делегування подій для кнопки Load More\n        document.body.addEventListener('click', (e) => {\n            if (e.target.classList.contains('load-more-btn')) {\n                this.handleLoadMore();\n            }\n        });\n    }\n\n    // Обробник події пошуку\n    async handleSearch() {\n        const query = this.searchInput.value.trim();\n        \n        // Перевірка наявності пошукового запиту\n        if (!query) {\n            iziToast.warning({\n                title: 'Warning',\n                message: 'Please enter a search query.',\n            });\n            return;\n        }\n\n        this.currentQuery = query;     // Зберігаємо поточний запит\n        this.currentPage = 1;          // Скидаємо сторінку до початкової\n        this.gallery.innerHTML = '';   // Очищуємо галерею\n        \n        await this.fetchAndRenderImages();  // Завантажуємо та відображаємо зображення\n    }\n\n    // Обробник завантаження додаткових зображень\n    async handleLoadMore() {\n        this.currentPage += 1;                // Збільшуємо номер сторінки\n        await this.fetchAndRenderImages();    // Завантажуємо нові зображення\n        scrollPageSmoothly();                 // Прокручуємо сторінку до нових зображень\n    }\n\n    // Метод для завантаження та відображення зображень\n    async fetchAndRenderImages() {\n        try {\n            showLoadingIndicator();  // Показуємо індикатор завантаження\n            \n            // Отримуємо зображення з API\n            const { images, totalHits } = await fetchImages(this.currentQuery, this.currentPage);\n            \n            renderImages(images, totalHits);  // Відображаємо зображення\n            this.lightbox.refresh();          // Оновлюємо лайтбокс\n\n            // Відображаємо кнопку \"Load More\" тільки для першої сторінки\n            if (this.currentPage === 1) {\n                renderLoadMoreButton(this.gallery, totalHits);\n            }\n        } catch (error) {\n            // Обробка помилок при завантаженні\n            iziToast.error({\n                title: 'Error',\n                message: error.message || 'Failed to fetch images',\n            });\n        } finally {\n            hideLoadingIndicator();  // Приховуємо індикатор завантаження\n        }\n    }\n}\n\n// Ініціалізація після завантаження DOM\ndocument.addEventListener('DOMContentLoaded', () => {\n    try {\n        new ImageGalleryController();  // Створюємо екземпляр контролера галереї\n    } catch (error) {\n        console.error('Failed to initialize gallery:', error);\n        iziToast.error({\n            title: 'Error',\n            message: 'Failed to initialize the gallery',\n        });\n    }\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","page","searchParams","url","response","axios","renderImages","images","totalHits","gallery","iziToast","imageMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","scrollPageSmoothly","galleryItems","itemHeight","showLoadingIndicator","loadMoreBtn","loader","createLoader","hideLoadingIndicator","renderLoadMoreButton","existingButton","existingMessage","currentPage","ImageGalleryController","SimpleLightbox","error"],"mappings":"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"}